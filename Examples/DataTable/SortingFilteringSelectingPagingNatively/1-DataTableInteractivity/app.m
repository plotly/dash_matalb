clear all
close all
terminate(pyenv);

% read data file
data = readtable('https://raw.githubusercontent.com/plotly/datasets/master/gapminder2007.csv', 'PreserveVariableNames', true);

% create Dash app
table_app = createApp();

% create ui elements
uifig = uifigure('visible', 'off');

uit = uitable(uifig, 'ColumnName', data.Properties.VariableNames, 'Data', data, 'visible', 'off');

[~, lncols] = size(uit.Data);
customColumns = {lncols};
for i=1:lncols
    customColumns{i} = py.dict(pyargs(...
        'name', string(uit.ColumnName(i)),...
        'id', string(uit.ColumnName(i)),...
        'deletable', true,...
        'selectable', true));
end
customColumns = py.list(customColumns);

uit.UserData = struct(...
    'customColumns', customColumns,...
    'editable', true,...
    'filter_action', 'native',...
    'sort_action', 'native',...
    'sort_mode', 'multi',...
    'column_selectable', 'multi',...
    'row_selectable', 'multi',...
    'row_deletable', true,...
    'selected_columns', py.list({}),...
    'selected_rows', py.list({}),...
    'page_action', 'native',...
    'page_current', 0,...
    'page_size', 10);

dash_table = ui2dash(uit, 'datatable-interactivity'); % Id of datatable is defined here

container = py.dash_html_components.Div(pyargs('id','datatable-interactivity-container'));

% add table to Dash app layout
table_app.layout = addLayout(py.dash_html_components.Div({...
    dash_table, container}));

% Callbacks

styles_callback = table_app.callback({argsOut('datatable-interactivity','style_data_conditional'),...
    argsIn('datatable-interactivity','selected_columns')});


graphs_callback = table_app.callback({argsOut('datatable-interactivity-container','children'),...
    argsIn('datatable-interactivity','derived_virtual_data'),...
    argsIn('datatable-interactivity','derived_virtual_selected_rows')});

styles_callback(@py.callback.callback1);
graphs_callback(@py.callback.callback2);

% run the app
table_app.run_server(pyargs('debug',true,'use_reloader',false,'port','8057'))